name: Subscribe or Update provider

on:
  workflow_dispatch:
    inputs:
      LeverancierEmail:
        description: 'Leverancier Email'
        required: true
        type: string
      LeverancierNaam:
        description: 'Leverancier Naam'
        required: true
        type: string
      LeverancierStad:
        description: 'Leverancier Stad'
        required: true
        type: string
      LeverancierStraat:
        description: 'Leverancier Straat'
        required: true
        type: string
      LeverancierPostadres:
        description: 'Leverancier Postadres'
        required: true
        type: string
      LeverancierKandidaat:
        description: 'Leverancier Kandidaat'
        required: true
        type: string
      LeverancierOpgemaaktte:
        description: 'Leverancier Opgemaakt te'
        required: true
        type: string
      LeverancierHoedanigheid:
        type: choice
        description: 'Leverancier Hoedanigheid'
        required: true
        options:
          - Directe Freelancer
          - Eigen werknemer
          - Freelancer in onderaanneming
          - Subcontractor
      LeverancierURLSignatureImage:
        description: 'Leverancier URL Signature image (currently supported: Dropbox, GoogleDrive)'
        required: true
        type: string
      setLogLevelDebug:
        description: 'Enable DEBUG (Admin only)'
        required: false
        type: boolean

jobs:
  search_and_update_or_add_to_repo_and_db:
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/johantre/github-runner-env:latest

    permissions:
      contents: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Cache Docker installation
        uses: actions/cache@v3
        with:
          path: /var/lib/apt/lists
          key: ${{ runner.os }}-docker-apt-${{ hashFiles('**/Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-docker-apt-

      - name: Cache Docker image
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ hashFiles('**/Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Set up Docker
        run: |
          apt-get update
          apt-get install -y docker.io

      - name: Log in to GitHub Container Registry
        run: echo ${{ secrets.GHCR_PAT }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Pull the Docker image from GHCR
        run: docker pull ghcr.io/johantre/github-runner-env:latest

      - name: Set custom log level
        run: |
          if [[ "${{ github.actor }}" == "johantre" ]] && [[ "${{ github.event.inputs.setLogLevelDebug }}" == "true" ]]; then
            echo "LOG_LEVEL=DEBUG" >> $GITHUB_ENV
          else
            echo "LOG_LEVEL=INFO" >> $GITHUB_ENV
          fi
        shell: bash

      - name: Check LOG_LEVEL in next step
        run: |
          echo "env.LOG_LEVEL in next step: ${{ env.LOG_LEVEL }}"

      - name: Encrypt and Populate SQLite Database
        env:
          LOG_LEVEL: ${{ env.LOG_LEVEL }}
          HASHING_KEY: ${{ secrets.HASHING_KEY }}
          ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_REFRESH_TOKEN: ${{ secrets.GOOGLE_REFRESH_TOKEN }}
          DROPBOX_APP_KEY: ${{ secrets.DROPBOX_APP_KEY }}
          DROPBOX_APP_SECRET: ${{ secrets.DROPBOX_APP_SECRET }}
          DROPBOX_REFRESH_TOKEN: ${{ secrets.DROPBOX_REFRESH_TOKEN }}
          INPUT_LEVERANCIEREMAIL: ${{ github.event.inputs.LeverancierEmail }}
          INPUT_LEVERANCIERNAAM: ${{ github.event.inputs.LeverancierNaam }}
          INPUT_LEVERANCIERSTAD: ${{ github.event.inputs.LeverancierStad }}
          INPUT_LEVERANCIERSTRAAT: ${{ github.event.inputs.LeverancierStraat }}
          INPUT_LEVERANCIERPOSTADRES: ${{ github.event.inputs.LeverancierPostadres }}
          INPUT_LEVERANCIERKANDIDAAT: ${{ github.event.inputs.LeverancierKandidaat }}
          INPUT_LEVERANCIEROPGEMAAKTTE: ${{ github.event.inputs.LeverancierOpgemaaktte }}
          INPUT_LEVERANCIERHOEDANIGHEID: ${{ github.event.inputs.LeverancierHoedanigheid }}
          INPUT_LEVERANCIERURLSIGNATUREIMAGE: ${{ github.event.inputs.LeverancierURLSignatureImage }}
        run: |
          export PYTHONPATH=$PYTHONPATH:$(pwd)/src
          python src/msword_properties_generator/main/subscribe_or_update_provider.py

