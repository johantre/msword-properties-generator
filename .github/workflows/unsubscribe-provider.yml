name: Unsubscribe provider

on:
  workflow_dispatch:
    inputs:
      LeverancierEmail:
        description: 'Leverancier Email'
        required: true
        type: string
      setLogLevelDebug:
        description: 'Enable DEBUG (Admin only)'
        required: false
        type: boolean

jobs:
  search_and_remove_from_repo_and_db:
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/johantre/github-runner-env:latest

    permissions:
      contents: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Cache Docker installation
        uses: actions/cache@v3
        with:
          path: /var/lib/apt/lists
          key: ${{ runner.os }}-docker-apt-${{ hashFiles('**/Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-docker-apt-

      - name: Cache Docker image
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ hashFiles('**/Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Set up Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io

      - name: Log in to GitHub Container Registry
        run: echo ${{ secrets.GHCR_PAT }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Pull the Docker image from GHCR
        run: docker pull ghcr.io/johantre/github-runner-env:latest

      - name: Set custom log level
        run: |
          if [[ "${{ github.actor }}" == "johantre" ]] && [[ "${{ github.event.inputs.setLogLevelDebug }}" == "true" ]]; then
            echo "LOG_LEVEL=DEBUG" >> $GITHUB_ENV
          else
            echo "LOG_LEVEL=INFO" >> $GITHUB_ENV
          fi

      - name: Check LOG_LEVEL in next step
        run: |
          echo "env.LOG_LEVEL in next step: ${{ env.LOG_LEVEL }}"

      - name: Fetch SQLite Database and remove encrypted image
        env:
          LOG_LEVEL: ${{ env.LOG_LEVEL }}
          HASHING_KEY: ${{ secrets.HASHING_KEY }}
          INPUT_LEVERANCIEREMAIL: ${{ github.event.inputs.LeverancierEmail }}
        run: |
          export PYTHONPATH=$PYTHONPATH:$(pwd)/src
          python src/msword_properties_generator/main/unsubscribe_provider.py

