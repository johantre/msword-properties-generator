name: Subscribe or Update provider

on:
  workflow_dispatch:
    inputs:
      LeverancierEmail:
        description: 'Leverancier Email'
        required: true
        type: string
      LeverancierNaam:
        description: 'Leverancier Naam'
        required: true
        type: string
      LeverancierStad:
        description: 'Leverancier Stad'
        required: true
        type: string
      LeverancierStraat:
        description: 'Leverancier Straat'
        required: true
        type: string
      LeverancierPostadres:
        description: 'Leverancier Postadres'
        required: true
        type: string
      LeverancierKandidaat:
        description: 'Leverancier Kandidaat'
        required: true
        type: string
      LeverancierOpgemaaktte:
        description: 'Leverancier Opgemaakt te'
        required: true
        type: string
      LeverancierHoedanigheid:
        description: 'Leverancier Hoedanigheid'
        required: true
        type: string
      LeverancierURLSignatureImage:
        description: 'Leverancier URL Signature image (Dropbox, GoogleDrive, OneDrive)'
        required: true
        type: string

jobs:
  encrypt_and_populate:
    runs-on: ubuntu-latest

    container:
      image: python:3.9-slim

    permissions:
      contents: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Git and cURL
        run: apt-get update && apt-get install -y git curl unzip xvfb

      - name: Install Google Chrome 134.0.6998.165
        run: |
          apt-get update
          apt-get install -y wget gnupg
          wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | apt-key add -
          sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
          apt-get update
          wget https://dl.google.com/linux/chrome/deb/pool/main/g/google-chrome-stable/google-chrome-stable_134.0.6998.165-1_amd64.deb
          apt-get install -y ./google-chrome-stable_134.0.6998.165-1_amd64.deb

      - name: Install ChromeDriver 134.0.6998.165
        run: |
          wget -N https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/134.0.6998.165/linux64/chromedriver-linux64.zip
          unzip chromedriver-linux64.zip
          mv chromedriver-linux64/chromedriver /usr/local/bin/
          chmod +x /usr/local/bin/chromedriver

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install cryptography jproperties pytz gitpython requests google-auth google-auth-oauthlib google-auth-httplib2 google-api-python-client dropbox pillow selenium selenium-wire blinker==1.4 mitmproxy==7.0.4

      - name: Start mitmproxy
        run: |
          nohup mitmproxy --mode regular --listen-port 8080 &
          sleep 10  # Wait for 10 seconds to ensure mitmproxy is fully started
          ps aux | grep mitmproxy  # Check if mitmproxy is running

      - name: Verify Dependencies
        run: |
          python -c "import blinker; print('Blinker installed successfully')"
          python -c "import seleniumwire; print('Selenium Wire installed successfully')"
          python -c "import mitmproxy; print('Mitmproxy installed successfully')"

      - name: Verify Chrome and ChromeDriver installation
        run: |
          google-chrome --version
          chromedriver --version

      - name: Encrypt and Populate SQLite Database
        env:
          LOG_LEVEL: DEBUG
          HASHING_KEY: ${{ secrets.HASHING_KEY }}
          ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_REFRESH_TOKEN: ${{ secrets.GOOGLE_REFRESH_TOKEN }}
          DROPBOX_APP_KEY: ${{ secrets.DROPBOX_APP_KEY }}
          DROPBOX_APP_SECRET: ${{ secrets.DROPBOX_APP_SECRET }}
          DROPBOX_REFRESH_TOKEN: ${{ secrets.DROPBOX_REFRESH_TOKEN }}
          INPUT_LEVERANCIEREMAIL: ${{ github.event.inputs.LeverancierEmail }}
          INPUT_LEVERANCIERNAAM: ${{ github.event.inputs.LeverancierNaam }}
          INPUT_LEVERANCIERSTAD: ${{ github.event.inputs.LeverancierStad }}
          INPUT_LEVERANCIERSTRAAT: ${{ github.event.inputs.LeverancierStraat }}
          INPUT_LEVERANCIERPOSTADRES: ${{ github.event.inputs.LeverancierPostadres }}
          INPUT_LEVERANCIERKANDIDAAT: ${{ github.event.inputs.LeverancierKandidaat }}
          INPUT_LEVERANCIEROPGEMAAKTTE: ${{ github.event.inputs.LeverancierOpgemaaktte }}
          INPUT_LEVERANCIERHOEDANIGHEID: ${{ github.event.inputs.LeverancierHoedanigheid }}
          INPUT_LEVERANCIERURLSIGNATUREIMAGE: ${{ github.event.inputs.LeverancierURLSignatureImage }}
        run: |
          export PYTHONPATH=$PYTHONPATH:$(pwd)/src
          Xvfb :99 -ac &
          export DISPLAY=:99
          python src/msword_properties_generator/main/encrypt_and_populate_provider_db.py

      - name: Commit and Push Changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add res/offers_provider.db
          git commit -m "Add encrypted personal data to SQLite database"
          git push
