name: Subscribe or Update provider

on:
  workflow_dispatch:
    inputs:
      LeverancierEmail:
        description: 'Leverancier Email'
        required: true
        type: string
      LeverancierNaam:
        description: 'Leverancier Naam'
        required: true
        type: string
      LeverancierStad:
        description: 'Leverancier Stad'
        required: true
        type: string
      LeverancierStraat:
        description: 'Leverancier Straat'
        required: true
        type: string
      LeverancierPostadres:
        description: 'Leverancier Postadres'
        required: true
        type: string
      LeverancierKandidaat:
        description: 'Leverancier Kandidaat'
        required: true
        type: string
      LeverancierOpgemaaktte:
        description: 'Leverancier Opgemaakt te'
        required: true
        type: string
      LeverancierHoedanigheid:
        description: 'Leverancier Hoedanigheid'
        required: true
        type: string
      LeverancierURLSignatureImage:
        description: 'Leverancier URL Signature image (Dropbox, GoogleDrive, OneDrive)'
        required: true
        type: string

jobs:
  encrypt_and_populate:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-cryptography-jproperties-pytz-gitpython-requests-google-auth-google-auth-oauthlib-google-auth-httplib2-google-api-python-client-dropbox-pillow-selenium
          restore-keys: |
            ${{ runner.os }}-pip-
        continue-on-error: true

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install cryptography jproperties pytz gitpython requests google-auth google-auth-oauthlib google-auth-httplib2 google-api-python-client dropbox pillow selenium

      - name: Add Google Chrome repository
        run: |
          wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | gpg --dearmor -o /usr/share/keyrings/google-chrome-archive-keyring.gpg
          echo "deb [arch=amd64 signed-by=/usr/share/keyrings/google-chrome-archive-keyring.gpg] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list > /dev/null

      - name: Update package list and install Google Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      - name: Get latest stable ChromeDriver version
        run: |
          CHROME_DRIVER_VERSION=$(curl -sS https://chromedriver.storage.googleapis.com/LATEST_RELEASE)
          echo "ChromeDriver version: $CHROME_DRIVER_VERSION" > chromedriver_version.txt

      - name: Verify ChromeDriver version
        run: |
          cat chromedriver_version.txt

      - name: Install ChromeDriver
        run: |
          CHROME_DRIVER_VERSION=$(cat chromedriver_version.txt)
          echo "Downloading ChromeDriver version: $CHROME_DRIVER_VERSION"
          wget -N https://chromedriver.storage.googleapis.com/$CHROME_DRIVER_VERSION/chromedriver_linux64.zip -P ~/
          unzip ~/chromedriver_linux64.zip -d ~/
          sudo mv -f ~/chromedriver /usr/local/bin/chromedriver
          sudo chmod 755 /usr/local/bin/chromedriver

      - name: Verify ChromeDriver installation
        run: |
          which chromedriver
          chromedriver --version

      - name: Encrypt and Populate SQLite Database
        env:
          LOG_LEVEL: DEBUG
          HASHING_KEY: ${{ secrets.HASHING_KEY }}
          ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_REFRESH_TOKEN: ${{ secrets.GOOGLE_REFRESH_TOKEN }}
          DROPBOX_APP_KEY: ${{ secrets.DROPBOX_APP_KEY }}
          DROPBOX_APP_SECRET: ${{ secrets.DROPBOX_APP_SECRET }}
          DROPBOX_REFRESH_TOKEN: ${{ secrets.DROPBOX_REFRESH_TOKEN }}
          INPUT_LEVERANCIEREMAIL: ${{ github.event.inputs.LeverancierEmail }}
          INPUT_LEVERANCIERNAAM: ${{ github.event.inputs.LeverancierNaam }}
          INPUT_LEVERANCIERSTAD: ${{ github.event.inputs.LeverancierStad }}
          INPUT_LEVERANCIERSTRAAT: ${{ github.event.inputs.LeverancierStraat }}
          INPUT_LEVERANCIERPOSTADRES: ${{ github.event.inputs.LeverancierPostadres }}
          INPUT_LEVERANCIERKANDIDAAT: ${{ github.event.inputs.LeverancierKandidaat }}
          INPUT_LEVERANCIEROPGEMAAKTTE: ${{ github.event.inputs.LeverancierOpgemaaktte }}
          INPUT_LEVERANCIERHOEDANIGHEID: ${{ github.event.inputs.LeverancierHoedanigheid }}
          INPUT_LEVERANCIERURLSIGNATUREIMAGE: ${{ github.event.inputs.LeverancierURLSignatureImage }}
        run: |
          export PYTHONPATH=$PYTHONPATH:$(pwd)/src
          python src/msword_properties_generator/main/encrypt_and_populate_provider_db.py

      - name: Commit and Push Changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add res/offers_provider.db
          git commit -m "Add encrypted personal data to SQLite database"
          git push
